# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#

#  Example entry pair - change twslh to name and change 8080 to correct port and 192.168.1.136 to right ip
<VirtualHost *:80>
    ServerName twslh.jtbdevelopment.com

    Redirect / https://twslh.jtbdevelopment.com/
</VirtualHost>

<VirtualHost *:443>
    RequestHeader set x-forwarded-proto "https"
    ServerName twslh.jtbdevelopment.com

    ProxyRequests Off
    ProxyPreserveHost On

    <Proxy *>
        Order deny,allow
        Allow from all
    </Proxy>

    SSLEngine on
    SSLCertificateFile "/usr/local/apache2/conf/server.crt"
    SSLCertificateKeyFile "/usr/local/apache2/conf/server.key"
    SSLCertificateChainFile "/usr/local/apache2/conf/server-ca.crt"

    RewriteEngine On
    RewriteCond %{HTTP:Upgrade} =websocket [NC]
    RewriteRule /(.*)           ws://192.168.1.136:8080/$1 [P,L]
    RewriteCond %{HTTP:Upgrade} !=websocket [NC]
    RewriteRule /(.*)           http://192.168.1.136:8080/$1 [P,L]

    ProxyPassReverse / http://192.168.1.136:8080/
</VirtualHost>



